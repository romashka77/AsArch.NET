@using AsArch.NET.Models
@model NodeEditViewModels

<div class="form-group">
    @Html.HiddenFor(model => model.Attrs[Model.IdAttr].IdAttr)
    @Html.HiddenFor(model => model.Attrs[Model.IdAttr].IdAttrType)
    @Html.HiddenFor(model => model.Attrs[Model.IdAttr].NameAttr)
    @Html.HiddenFor(model => model.Attrs[Model.IdAttr].Options)
    @Html.HiddenFor(model => model.Attrs[Model.IdAttr].ID_PARENT)
    @Html.HiddenFor(model => model.Attrs[Model.IdAttr].ParentName)
    @Html.HiddenFor(model => model.Attrs[Model.IdAttr].CHAR_VALUE)
    @Html.Label(Model.Attrs[Model.IdAttr].NameAttr, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @if (Model.Attrs[Model.IdAttr].Options == 2)
        {
            if (Model.Attrs[Model.IdAttr].ID_PARENT == null)
            {
                @Html.DropDownListFor(model => Model.Attrs[Model.IdAttr].ParentName, Model.Dict.ToList().Where(a => a.ID_ATTR == Model.Attrs[Model.IdAttr].IdAttr).Select(a => new SelectListItem { Text = a.STR_NAME, Value = a.STR_NAME, Selected = (a.STR_NAME == Model.Attrs[Model.IdAttr].ParentName) }), "Выберите " + Model.Attrs[Model.IdAttr].NameAttr, htmlAttributes: new { @class = "form-control" })

            }
            else
            { @Html.ActionLink(Model.Attrs[Model.IdAttr].ParentName, "Index", new { id = Model.Attrs[Model.IdAttr].ID_PARENT }, new { @class = "btn btn-default" })}
    }
    else
    {
        var i = Model.Attrs[Model.IdAttr].IdAttr;
        @Html.DropDownListFor(model => model.Attrs[Model.IdAttr].CHAR_VALUE, Model.Dict.Where(a => a.ID_ATTR == i).OrderBy(a => a.STR_NAME).ToList().Select(a => new SelectListItem { Text = a.STR_NAME, Value = a.STR_NAME, Selected = (a.STR_NAME == Model.Attrs[Model.IdAttr].CHAR_VALUE) }), "Выберите " + Model.Attrs[Model.IdAttr].NameAttr, htmlAttributes: new { @class = "form-control" })
        @*@Html.ValidationMessageFor(model => model.CHAR_VALUE, "", new { @class = "text-danger" })*@
    }

    </div>
</div>
